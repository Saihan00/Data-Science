import numpy as np
import matplotlib.pyplot as plt
import seaborn as seaborn
import pandas as pd 

from numpy import asarray
from numpy import arange 
from numpy.random import rand
from matplotlib import pyplot  

def objective(x):
    return x**2.0

def derivative (x):
    return x**2.0

def gradient_descent(objective,derivative,bounds,n_iter,step_size):
    solutions, scores = list(), list()
    solution = bounds[:, 0] + rand(len(bounds)) * (bounds[:, 1] - bounds[:, 0])
    for i in range(n_iter):
        gradient = derivative(solution)

solution = solution - step_size * gradient

solution_eval = objective(solution)
solution.append(solution_eval)
scores.append(solution_eval)

print('>%d f(%s) = %.5f' % (i,solution,solution_eval)) return [solutions, scores]

bounds = asarray

